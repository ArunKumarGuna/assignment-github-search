{"ast":null,"code":"import { FETCH_TODOS_SUCCESS, FETCH_TODOS_FAILURE, FETCHING_TODOS } from '../Constant';\nconst initialState = {\n  datas: [],\n  UIdata: [],\n  dataFetched: false,\n  isFetching: false,\n  error: false\n};\nexport default function dataReducer(state = initialState, action) {\n  debugger;\n\n  switch (action.type) {\n    case FETCHING_TODOS:\n      return { ...state,\n        datas: [],\n        isFetching: true\n      };\n\n    case FETCH_TODOS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        datas: action.data,\n        UIdata: action.uidata\n      };\n\n    case FETCH_TODOS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/arunkumarg/ReactSinglePage/github-searcher/src/Reducer/dataReducer.js"],"names":["FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILURE","FETCHING_TODOS","initialState","datas","UIdata","dataFetched","isFetching","error","dataReducer","state","action","type","data","uidata"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,EAAmDC,cAAnD,QAAyE,aAAzE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAC,EAFU;AAGjBC,EAAAA,WAAW,EAAE,KAHI;AAIjBC,EAAAA,UAAU,EAAE,KAJK;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AAClE;;AACI,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,KAAK,EAAE,EAFJ;AAGHG,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAKJ,SAAKP,mBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,UAAU,EAAE,KAFT;AAGHH,QAAAA,KAAK,EAAEO,MAAM,CAACE,IAHX;AAIHR,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAJZ,OAAP;;AAMJ,SAAKb,mBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AACI,aAAOE,KAAP;AArBR;AAuBH","sourcesContent":["import { FETCH_TODOS_SUCCESS, FETCH_TODOS_FAILURE, FETCHING_TODOS } from '../Constant';\n\nconst initialState = {\n    datas: [],\n    UIdata:[],\n    dataFetched: false,\n    isFetching: false,\n    error: false\n}\n\nexport default function dataReducer(state = initialState, action) {\ndebugger;\n    switch(action.type) {\n        case FETCHING_TODOS:\n            return {\n                ...state,\n                datas: [],\n                isFetching: true\n            }\n        case FETCH_TODOS_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                datas: action.data,\n                UIdata: action.uidata\n            }\n        case FETCH_TODOS_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: true\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}