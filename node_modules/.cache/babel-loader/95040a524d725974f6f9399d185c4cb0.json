{"ast":null,"code":"var _jsxFileName = \"/Users/arunkumarg/ReactSinglePage/github-searcher/src/searcher.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridList, GridListTile, GridListTileBar, IconButton, TextField, InputLabel, Select, FormControl, withStyles } from '@material-ui/core';\nimport { fetchToDos } from './Action/dataAction';\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\nimport searchStyle from './searchStyle.css';\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  root1: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n});\n\nclass Searcher extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: null,\n      listOfData: [],\n      searchPitem: ''\n    };\n\n    this.callApis = value => {\n      debugger;\n      console.log(\"https://api.github.com/search/\" + this.state.selected + \"?q=\" + value);\n      this.setState({\n        searchPitem: value\n      });\n      this.getOfflineOrOnlineData(value);\n    };\n\n    this.getOfflineOrOnlineData = value => {\n      if (value.length >= 3) {\n        if (this.props.todos.datas.items != null || this.props.todos.datas.items != undefined) {\n          if (this.props.todos.datas.items.length > 0) {\n            var offlineData = [];\n            offlineData = this.props.todos.datas.items.filter(item => {\n              return item.owner.login.startsWith(value);\n            });\n\n            if (offlineData.length != 0) {\n              this.props.todos.UIdata = offlineData;\n            } else {\n              this.props.fetchToDos(this.state.selected, value);\n            }\n          } else {\n            this.props.fetchToDos(this.state.selected, value);\n          }\n        } else {\n          this.props.fetchToDos(this.state.selected, value);\n        }\n      }\n    };\n\n    this.handleChange = value => {\n      if (this.state.searchPitem.length >= 3) {\n        this.setState({\n          searchPitem: ''\n        });\n      }\n\n      this.setState({\n        selected: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      selected\n    } = this.state; //const { datas, isFetching, error, dataFetched } = this.props.todos;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-search\",\n      label: \"Start typing to search\",\n      value: this.state.searchPitem,\n      variant: \"filled\",\n      onChange: event => this.callApis(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"filled\",\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"filled-age-native-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      value: selected,\n      onChange: event => this.handleChange(event.target.value),\n      inputProps: {\n        id: 'filled-age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Users\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"repositories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Repositories\")))), this.props.todos.UIdata.length != 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 180,\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, this.props.todos.UIdata.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n      key: tile.owner.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: tile.owner.avatar_url,\n      alt: tile.owner.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }))))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"No Data\"));\n  }\n\n}\n\nSearcher.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.DataReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { ...bindActionCreators({\n      fetchToDos\n    }, dispatch)\n  };\n}\n\nexport default compose(withStyles(styles), connect(mapStateToProps, mapDispatchToProps))(Searcher);","map":{"version":3,"sources":["/Users/arunkumarg/ReactSinglePage/github-searcher/src/searcher.js"],"names":["React","PropTypes","GridList","GridListTile","GridListTileBar","IconButton","TextField","InputLabel","Select","FormControl","withStyles","fetchToDos","bindActionCreators","compose","connect","searchStyle","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","root1","justifyContent","overflow","backgroundColor","palette","background","paper","icon","color","Searcher","Component","state","selected","listOfData","searchPitem","callApis","value","console","log","setState","getOfflineOrOnlineData","length","props","todos","datas","items","undefined","offlineData","filter","item","owner","login","startsWith","UIdata","handleChange","render","classes","alignItems","event","target","id","map","tile","avatar_url","propTypes","object","isRequired","mapStateToProps","DataReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {GridList,GridListTile,GridListTileBar,IconButton,TextField,InputLabel,Select,FormControl,withStyles} from '@material-ui/core';\nimport { fetchToDos } from './Action/dataAction'\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\nimport searchStyle from './searchStyle.css'\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  root1: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\nclass Searcher extends React.Component{\n  state = {\n    selected: null,\n    listOfData:[],\n    searchPitem:''\n  };\n\n  callApis = (value) => {\n    debugger;\n    console.log(\"https://api.github.com/search/\"+this.state.selected+\"?q=\"+value);\n    this.setState({searchPitem: value});\n\n    this.getOfflineOrOnlineData(value);\n\n    \n  }\n\n   getOfflineOrOnlineData = (value) => {\n    if(value.length >= 3){\n      if(this.props.todos.datas.items != null || this.props.todos.datas.items != undefined){\n      if(this.props.todos.datas.items.length>0){\n        \n        var offlineData = [];\n        \n        offlineData = this.props.todos.datas.items.filter((item)=>{\n            return item.owner.login.startsWith(value);\n        })\n       if(offlineData.length != 0){\n        this.props.todos.UIdata = offlineData; \n       }\n        else{\n          this.props.fetchToDos(this.state.selected,value)\n        }\n\n      }else{\n        this.props.fetchToDos(this.state.selected,value)\n      }\n    }else{\n      this.props.fetchToDos(this.state.selected,value)\n    }\n    }\n  }\n\n  handleChange = (value) => {\n    if(this.state.searchPitem.length >= 3){\n      this.setState({searchPitem: ''});\n    }\n    this.setState({selected:value})\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { selected } = this.state;\n    //const { datas, isFetching, error, dataFetched } = this.props.todos;\n    \n    return (\n      <div>\n      <div style={{display: 'flex', alignItems: 'center',justifyContent: 'center',}}> \n      \n        <TextField id=\"standard-search\" \n        label=\"Start typing to search\" \n        value= {this.state.searchPitem} \n        variant=\"filled\"\n        onChange={event => this.callApis(event.target.value)}/>\n\n        <FormControl variant=\"filled\" className={classes.formControl}>\n        <InputLabel htmlFor=\"filled-age-native-simple\">Type</InputLabel>\n        <Select\n          native\n          value={selected}\n          onChange={event => this.handleChange(event.target.value)}\n          inputProps={{\n            id: 'filled-age-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={\"users\"}>Users</option>\n          <option value={\"repositories\"}>Repositories</option>\n        </Select>\n      </FormControl>\n</div>\n      {/* {\n        isFetching && <p>Loading...</p>\n      } */}\n      {this.props.todos.UIdata.length != 0 ?(\n      <div className={classes.root}>\n      <GridList cellHeight={180} cols={3} >\n        {/* <GridListTile key=\"Subheader\" style={{ height: 'auto' }}>\n        </GridListTile> */}\n        {this.props.todos.UIdata.map((tile) => (\n          <GridListTile key={tile.owner.avatar_url}>\n            <img src={tile.owner.avatar_url} alt={tile.owner.login} />\n            \n          </GridListTile>\n        ))}\n      </GridList>\n    </div>):<p>No Data</p>}\n      </div>\n    );\n  }\n}\n\nSearcher.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n      todos: state.DataReducer\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      ...bindActionCreators({ fetchToDos }, dispatch)\n  }\n}\n\nexport default compose(withStyles(styles),connect(mapStateToProps, mapDispatchToProps))(Searcher);\n"]},"metadata":{},"sourceType":"module"}