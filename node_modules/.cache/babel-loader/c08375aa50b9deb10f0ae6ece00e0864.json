{"ast":null,"code":"var _jsxFileName = \"/Users/arunkumarg/ReactSinglePage/github-searcher/src/searcher.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from '@material-ui/core/TextField';\nimport { GridList, ListSubheader, GridListTile, GridListTileBar, IconButton } from '@material-ui/core'; //import InfoIcon from '@material-ui/icons/Info';\n\nimport { fetchToDos } from './Action/dataAction';\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n});\n\nclass Searcher extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: null,\n      hasError: false,\n      searchPitem: ''\n    };\n  }\n\n  callApis(value) {\n    if (value.length > 3) {\n      this.props.fetchToDos(this.state.selected, value);\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      selected,\n      hasError\n    } = this.state;\n    const {\n      datas,\n      isFetching,\n      error,\n      dataFetched\n    } = this.props.todos; //\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-search\",\n      label: \"Start typing to search\",\n      type: \"search\",\n      variant: \"filled\",\n      onChange: event => this.callApis(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"filled\",\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"filled-age-native-simple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      value: selected,\n      onChange: event => this.setState({\n        selected: event.target.value\n      }),\n      inputProps: {\n        id: 'filled-age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Users\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"repositories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Repositories\"))), isFetching && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, \"Loading...\"), datas.items != undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), datas.items.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n      key: tile.owner.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: tile.owner.avatar_url,\n      alt: tile.owner.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: tile.owner.login,\n      subtitle: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"by: \", tile.owner.login),\n      actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `info about ${tile.owner.login}`,\n        className: classes.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }))))) : null);\n  }\n\n}\n\nSearcher.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.DataReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { ...bindActionCreators({\n      fetchToDos\n    }, dispatch)\n  };\n}\n\nexport default compose(withStyles(styles), connect(mapStateToProps, mapDispatchToProps))(Searcher);","map":{"version":3,"sources":["/Users/arunkumarg/ReactSinglePage/github-searcher/src/searcher.js"],"names":["React","PureComponent","PropTypes","withStyles","Input","MenuItem","FormHelperText","FormControl","Select","InputLabel","TextField","GridList","ListSubheader","GridListTile","GridListTileBar","IconButton","fetchToDos","bindActionCreators","compose","connect","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","Searcher","state","selected","hasError","searchPitem","callApis","value","length","props","render","classes","datas","isFetching","error","dataFetched","todos","alignItems","event","target","setState","id","items","undefined","map","tile","owner","avatar_url","login","propTypes","object","isRequired","mapStateToProps","DataReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from '@material-ui/core/TextField';\nimport {GridList,ListSubheader,GridListTile,GridListTileBar,IconButton} from '@material-ui/core';\n//import InfoIcon from '@material-ui/icons/Info';\nimport { fetchToDos } from './Action/dataAction'\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\nclass Searcher extends PureComponent{\n  state = {\n    selected: null,\n    hasError: false,\n    searchPitem:''\n  };\n\n  callApis(value) {\n    if(value.length > 3){\n    this.props.fetchToDos(this.state.selected,value)\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { selected, hasError } = this.state;\n    const { datas, isFetching, error, dataFetched } = this.props.todos;\n    //\n    return (\n      <div style={{display: 'flex', alignItems: 'center',justifyContent: 'center',}}> \n      \n        <TextField id=\"standard-search\" \n        label=\"Start typing to search\" \n        type=\"search\" \n        variant=\"filled\"\n        onChange={event => this.callApis(event.target.value)}/>\n        <FormControl variant=\"filled\" className={classes.formControl}>\n        <InputLabel htmlFor=\"filled-age-native-simple\">Type</InputLabel>\n        <Select\n          native\n          value={selected}\n          onChange={event => this.setState({selected:event.target.value})}\n          inputProps={{\n            id: 'filled-age-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={\"users\"}>Users</option>\n          <option value={\"repositories\"}>Repositories</option>\n        </Select>\n      </FormControl>\n\n      {\n        isFetching && <p>Loading...</p>\n      }\n      {datas.items != undefined ?(\n      <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          {/* <ListSubheader component=\"div\">December</ListSubheader> */}\n        </GridListTile>\n        {datas.items.map((tile) => (\n          <GridListTile key={tile.owner.avatar_url}>\n            <img src={tile.owner.avatar_url} alt={tile.owner.login} />\n            <GridListTileBar\n              title={tile.owner.login}\n              subtitle={<span>by: {tile.owner.login}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.owner.login}`} className={classes.icon}>\n                  {/* <InfoIcon /> */}\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>):null}\n      </div>\n    );\n  }\n}\n\nSearcher.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n      todos: state.DataReducer\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      ...bindActionCreators({ fetchToDos }, dispatch)\n  }\n}\n\nexport default compose(withStyles(styles),connect(mapStateToProps, mapDispatchToProps))(Searcher);\n"]},"metadata":{},"sourceType":"module"}